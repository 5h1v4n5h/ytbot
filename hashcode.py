# -*- coding: utf-8 -*-
"""Hashcode.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1egOb49SEZmy0WsElKoZJxyxaei6D7b-p
"""

import numpy as np
import pandas as pd
import math

file_name = 'a_an_example'

data = open(file_name+'.in.txt','r').readlines()
data

no_of_contributor = 0
no_of_projects = 0

'''
contributor = [contributor_name,no_of_skills,[skills,level]]------------>format of list

project = [project_name,no_of_days,score,best_before,no_of_skills_req,[skills,level]] ------------------>format of list
'''

no_of_contributor,no_of_projects=data[0].strip().split()
counter=0
contributor = []
for i in range(1,int(no_of_contributor)+1):
  counter+=1
  contributor_data = []
  contributor_name,no_of_skills =  data[counter].strip().split()
  contributor_data.append(contributor_name)
  contributor_data.append(int(no_of_skills))
  skills_all = []
  for i in range(int(no_of_skills)): 
    counter+=1
    skill , level= data[counter].strip().split()
    skill_lst=[skill,int(level)]
    skills_all.append(skill_lst)
  contributor_data.append(skills_all)
  contributor.append(contributor_data)

#NO of Projects
project=[]
for i in range(1,int(no_of_projects)+1):
  counter+=1
  project_data = []
  project_name,no_of_days,score,best_before,no_of_skills_req = data[counter].strip().split()
  project_data.append(project_name)
  project_data.append(int(no_of_days))
  project_data.append(int(score))
  project_data.append(int(best_before))
  project_data.append(int(no_of_skills_req))
  skills_all = []
  for i in range(int(no_of_skills_req)): 
    counter+=1
    skill , level= data[counter].strip().split()
    skill_lst=[skill,int(level)]
    skills_all.append(skill_lst)
  project_data.append(skills_all)
  project.append(project_data)

contributor

project

def search_contributor(skill_needed,level_needed):
  for i in contributor:
    skill_set=[]
    skill_set = i[2]
    for j in skill_set:
      skill = j[0]
      level = j[1]
      if skill_needed == skill and (level_needed == level or level_needed >= level or level_needed <= level):
        contributor_name = i[0]
        return(contributor_name)
        #break

print(search_contributor('HTML', 5))

'''
role_assignment = [project_name , [contributor arrenged in order of skills]]
'''
role_assignment = []
for i in project:
  project_name = i[0]
  skills = i[5]
  skills_req =[]
  contributors = []
  for j in skills:
    skill = j[0]
    level = j[1]
    skills_req.append(skill)
    contributorz = search_contributor(skill,level)
    contributors.append(contributorz)
  role_assignment.append([project_name,skills_req,contributors])

role_assignment

#write
output =''
output = str(no_of_projects)+'\n'
for i in role_assignment:
  output+=(i[0]+'\n')
  for j in i[2]:
    output+=j+' '
  output+='\n'
print(output)

write = open(file_name+'_output.txt','w')
write.write(output)
write.close()